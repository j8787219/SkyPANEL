version: '3.8'

# Production override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  # Production app configuration
  app:
    container_name: skypanel-app-prod
    restart: always
    environment:
      NODE_ENV: production
      # Override development settings
      VITE_PAYPAL_SANDBOX: "false"
    # Remove port exposure in production (use reverse proxy)
    ports: []
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Production database with no exposed ports
  postgres:
    container_name: skypanel-postgres-prod
    restart: always
    ports: []  # Don't expose database port in production
    environment:
      # Use production database name
      POSTGRES_DB: ${POSTGRES_DB:-skypanel_prod}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production Redis with no exposed ports
  redis:
    container_name: skypanel-redis-prod
    restart: always
    ports: []  # Don't expose Redis port in production
    volumes:
      - redis_data_prod:/data
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: skypanel-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - skypanel-network
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  nginx_logs:
    driver: local

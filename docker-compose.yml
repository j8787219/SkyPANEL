version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: skypanel-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-skypanel}
      POSTGRES_USER: ${POSTGRES_USER:-skypanel}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-skypanel123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-skypanel} -d ${POSTGRES_DB:-skypanel}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - skypanel-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: skypanel-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - skypanel-network

  # SkyPANEL Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: skypanel-app
    restart: unless-stopped
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-skypanel}:${POSTGRES_PASSWORD:-skypanel123}@postgres:5432/${POSTGRES_DB:-skypanel}
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      
      # Session Management
      SESSION_SECRET: ${SESSION_SECRET:-your_secure_random_string_here}
      
      # Application Settings
      NODE_ENV: production
      PORT: 5000
      
      # VirtFusion API Integration
      VIRTFUSION_API_URL: ${VIRTFUSION_API_URL}
      VIRTFUSION_API_KEY: ${VIRTFUSION_API_KEY}
      
      # Email Configuration
      SMTP2GO_API_KEY: ${SMTP2GO_API_KEY}
      SMTP_FROM: ${SMTP_FROM:-noreply@your-domain.com}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME:-SkyPANEL Support}
      
      # Discord Integration (Optional)
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
      DISCORD_ROLE_ID: ${DISCORD_ROLE_ID}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_GUILD_ID: ${DISCORD_GUILD_ID}
      DISCORD_CHANNEL_ID: ${DISCORD_CHANNEL_ID}
      DISCORD_ALLOWED_ROLE_IDS: ${DISCORD_ALLOWED_ROLE_IDS}
      DISCORD_ALLOWED_USER_IDS: ${DISCORD_ALLOWED_USER_IDS}
      
      # Google AI Integration
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      
      # BetterStack Monitoring (Optional)
      BETTERSTACK_API_KEY: ${BETTERSTACK_API_KEY}
      
      # PayPal Configuration
      VITE_PAYPAL_SANDBOX: ${VITE_PAYPAL_SANDBOX:-true}
      VITE_PAYPAL_SANDBOX_CLIENT_ID: ${VITE_PAYPAL_SANDBOX_CLIENT_ID}
      VITE_PAYPAL_SANDBOX_SECRET: ${VITE_PAYPAL_SANDBOX_SECRET}
      VITE_PAYPAL_CLIENT_ID: ${VITE_PAYPAL_CLIENT_ID}
      VITE_PAYPAL_SECRET: ${VITE_PAYPAL_SECRET}
      VITE_PAYPAL_CURRENCY: ${VITE_PAYPAL_CURRENCY:-USD}
    ports:
      - "${APP_PORT:-5000}:5000"
    volumes:
      - app_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - skypanel-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  skypanel-network:
    driver: bridge
